/*
  Use the following mixin class name to create desired output
  
  1. .margin(1) => margin: 1px; margin: .1rem;
  2. .margin(1, 2) => margin: 1px 2px; margin: .1rem .2rem;
  3. .margin(1, 2, 3) => margin: 1px 2px 3px; margin: .1rem .2rem .3rem;
  4 .margin(1, 2, 3, 4) => margin: 1px 2px 3px 4px; margin: .1rem .2rem .3rem .4rem;
  5. .margin(top, 5) = margin-top: 5px; margin-top: .5rem;
*/


//follows pattern for margin:(1);
.margin(@a) when (isnumber(@a)) and not (@a = 0) and not(ispercentage(@a)) {
    @rem: @a/10;
    margin: ~"@{a}px";
    margin: ~"@{rem}rem";
}
.margin(@a) when (isnumber(@a)) and (@a = 0) {
    margin: ~"@{a}";
}

//follows pattern for margin:(1,1);
.margin(@a; @b) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) {
    @remA: @a/10;    @remB: @b/10;
    margin: ~"@{a}px" ~"@{b}px";
    margin: ~"@{remA}rem" ~"@{remB}rem";
}
.margin(@a; @b) when (isnumber(@a)) and (@a = 0){
    @remA: @a/10;    @remB: @b/10;
    margin: ~"@{a}" ~"@{b}px";
    margin: ~"@{remA}" ~"@{remB}rem";
}
.margin(@a; @b) when (isnumber(@a)) and (@b = 0){
    @remA: @a/10;    @remB: @b/10;
    margin: ~"@{a}px" ~"@{b}";
    margin: ~"@{remA}rem" ~"@{remB}";
}

//follows pattern for margin:(1,1,1);
//(1, 1, 1)
.margin(@a; @b; @c) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) and not (@c = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    
    margin: ~"@{a}px" ~"@{b}px" ~"@{c}px";
    margin: ~"@{remA}rem" ~"@{remB}rem" ~"@{remC}rem";
}//(0, 0, 1)
.margin(@a; @b; @c) when (isnumber(@a)) and (@a = 0) and (@b = 0) and not (@c = 0){
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10; 
    margin: ~"@{a}" ~"@{b}" ~"@{c}px";
    margin: ~"@{remA}" ~"@{remB}" ~"@{remC}rem";
}
//(0, 1, 0)
.margin(@a; @b; @c) when (isnumber(@a)) and (@a = 0) and not (@b = 0) and (@c = 0){
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10; 
    margin: ~"@{a}" ~"@{b}px" ~"@{c}";
    margin: ~"@{remA}" ~"@{remB}rem" ~"@{remC}";
}
//1, 0, 0)
.margin(@a; @b; @c) when (isnumber(@a)) and not (@a = 0) and (@b = 0) and (@c = 0) {
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10; 
    margin: ~"@{a}px" ~"@{b}" ~"@{c}";
}
//(1, 1, 0)
.margin(@a; @b; @c) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) and (@c = 0){
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10; 
    margin: ~"@{a}px" ~"@{b}px" ~"@{c}";
    margin: ~"@{remA}rem" ~"@{remB}rem" ~"@{c}";
}
//(1, 0, 1)
.margin(@a; @b; @c) when (isnumber(@a)) and not (@a = 0) and (@b = 0) and not (@c = 0){
    @remA: @a/10; @remC: @c/10; 
    margin: ~"@{a}px" ~"@{b}" ~"@{c}px";
    margin: ~"@{remA}rem" ~"@{b}" ~"@{remC}rem";
}
//(0, 1, 1)
.margin(@a; @b; @c) when (isnumber(@a)) and (@a = 0) and not (@b = 0) and not (@c = 0){
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10; 
    margin: ~"@{a}" ~"@{b}px" ~"@{c}px";
    margin: ~"@{remA}" ~"@{remB}rem" ~"@{remC}rem";
}
//(0, 0, 0)
.margin(@a; @b; @c) when (isnumber(@a)) and (@a = 0) and (@b = 0) and (@c = 0) {
    margin: ~"@{a}" ~"@{b}" ~"@{c}";
}

//follows pattern for margin:(1,1,1,1);
//(1, 1, 1, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) and not (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}px" ~"@{c}px" ~"@{d}px";
    margin: ~"@{remA}rem" ~"@{remB}rem" ~"@{remC}rem" ~"@{remD}rem";
}
//(1, 1, 1, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) and not (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}px" ~"@{c}px" ~"@{d}";
    margin: ~"@{remA}rem" ~"@{remB}rem" ~"@{remC}rem" ~"@{remD}";
}
//(1, 1, 0, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) and (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}px" ~"@{c}" ~"@{d}px";
    margin: ~"@{remA}rem" ~"@{remB}rem" ~"@{remC}" ~"@{remD}rem";
}
//(1, 0, 1, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and (@b = 0) and not (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}" ~"@{c}px" ~"@{d}px";
    margin: ~"@{remA}rem" ~"@{remB}" ~"@{remC}rem" ~"@{remD}rem";
}
//(0, 1, 1, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and not (@b = 0) and not (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}px" ~"@{c}px" ~"@{d}px";
    margin: ~"@{remA}" ~"@{remB}rem" ~"@{remC}rem" ~"@{remD}rem";
}
//(0, 0, 1, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and (@b = 0) and not (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}" ~"@{c}px" ~"@{d}px";
    margin: ~"@{remA}" ~"@{remB}" ~"@{remC}rem" ~"@{remD}rem";
}
//(0, 0, 0, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and (@b = 0) and (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}" ~"@{c}" ~"@{d}px";
    margin: ~"@{remA}" ~"@{remB}" ~"@{remC}" ~"@{remD}rem";
}
//(0, 0, 0, 0,)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and (@b = 0) and (@c = 0) and (@d = 0) { 
    margin: ~"@{a}" ~"@{b}" ~"@{c}" ~"@{d}";
}
//(1, 0, 0, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and (@b = 0) and (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}" ~"@{c}" ~"@{d}";
    margin: ~"@{remA}rem" ~"@{remB}" ~"@{remC}" ~"@{remD}";
}
//(1, 0, 0, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and (@b = 0) and (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}" ~"@{c}" ~"@{d}px";
    margin: ~"@{remA}rem" ~"@{remB}" ~"@{remC}" ~"@{remD}rem";
}
//(1, 0, 1, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and (@b = 0) and not (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}" ~"@{c}px" ~"@{d}";
    margin: ~"@{remA}rem" ~"@{remB}" ~"@{remC}rem" ~"@{remD}";
}
//(0, 1, 0, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and not (@b = 0) and (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}px" ~"@{c}" ~"@{d}";
    margin: ~"@{remA}" ~"@{remB}rem" ~"@{remC}" ~"@{remD}";
}
//(0, 1, 0, 1)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and not (@b = 0) and (@c = 0) and not (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}px" ~"@{c}" ~"@{d}px";
    margin: ~"@{remA}" ~"@{remB}rem" ~"@{remC}" ~"@{remD}rem";
}
//(0, 1, 1, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and not (@b = 0) and not (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}px" ~"@{c}px" ~"@{d}";
    margin: ~"@{remA}" ~"@{remB}rem" ~"@{remC}rem" ~"@{remD}";
}
//(1, 1, 0, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and not (@a = 0) and not (@b = 0) and (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}px" ~"@{b}px" ~"@{c}" ~"@{d}";
    margin: ~"@{remA}rem" ~"@{remB}rem" ~"@{remC}" ~"@{remD}";
}
//(0, 0, 1, 0)
.margin(@a; @b; @c; @d) when (isnumber(@a)) and (@a = 0) and (@b = 0) and not (@c = 0) and (@d = 0) { 
    @remA: @a/10;    @remB: @b/10;    @remC: @c/10;    @remD: @d/10;
    margin: ~"@{a}" ~"@{b}" ~"@{c}px" ~"@{d}";
    margin: ~"@{remA}" ~"@{remB}" ~"@{remC}rem" ~"@{remD}";
}

//margin value is 0 do not include unit
.margin(@a; @b) when not (isnumber(@a)) and (@b = 0) {
    margin-@{a}: ~"@{b}"; 
}
.margin(@a; @b) when not (isnumber(@a)) and not(ispercentage(@b)) and (isnumber(@b)) and not (@b = 0) {
    @rem: @b/10;
    @px: (@b);
    margin-@{a}: ~"@{px}px"; 
    margin-@{a}: ~"@{rem}rem";
}
//(1%)
.margin(@a; @b) when not(isnumber(@a)) and (ispercentage(@b)) { 
    margin-@{a}: ~"@{b}";    
}

//(1%)
.margin(@a) when (ispercentage(@a)) { 
    margin: ~"@{a}";    
}